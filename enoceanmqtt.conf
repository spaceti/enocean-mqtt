## the general section defines parameter for the mqtt broker and the enocean interface
[CONFIG]
enocean_port    = /dev/enocean
log_packets     = 1

mqtt_host       = a19b6g93aj51sz-ats.iot.eu-central-1.amazonaws.com
mqtt_port       = 8883
mqtt_client_id  = enocean   # ensure that this is unique if you use multiple clients

## setting mqtt_keepalive = 0 sets the timeout to infinitive but does not work reliably
## due to an upstream issue https://github.com/eclipse/paho.mqtt.python/issues/473
mqtt_keepalive  = 60

## the prefix is used for the mqtt value names; this is extended by the sensor name
mqtt_prefix     = Enocean/

## publish received packets as single MQTT message with a JSON payload
mqtt_publish_json = true

## optionally also set mqtt_user and mqtt_pwd (don't use quotes).
# mqtt_user       = mqtt
# mqtt_pwd        = password

## enable SSL on MQTT connection
## Ensure that mqtt_host matches one of the hostnames contained in the broker's
## certificate, otherwise the client will refuse to connect.
##
## mqtt_ssl_ca_certs: CA certificates to be treated as trusted. Required if
##     the MQTT broker is configured with a self-signed certificate.
## mqtt_ssl_certfile, mqtt_ssl_keyfile: Client certificate and private key.
##     Only required if the broker requires clients to present a certificate.
## mqtt_ssl_insecure: Disable verification of the broker's certificate.
##     WARNING: do NOT use on production systems as this is insecure!
##
mqtt_ssl          = true
mqtt_ssl_ca_certs = /root/enocean-certificates/AmazonRootCA1.pem
mqtt_ssl_certfile = /root/enocean-certificates/f1f01c3c33-certificate.pem.crt
mqtt_ssl_keyfile  = /root/enocean-certificates/f1f01c3c33-private.pem.key
# mqtt_ssl_insecure = true

## Enable MQTT debugging. Requires --debug on the command line.
# mqtt_debug      = true

## all other sections define the sensors to monitor

# Deuta EnoPuck CO2 + PIR
[FF83E2E4]
address         = 0xFF83E2E4
rorg            = 0xa5
func            = 0x09
type            = 0x04
log_learn       = 1
publish_rssi    = 1

[FF83E2E5]
address         = 0xFF83E2E5
rorg            = 0xa5
func            = 0x07
type            = 0x01
log_learn       = 1
publish_rssi    = 1

# Enocean STM550
[04211BB6]
address         = 0x04211BB6
rorg            = 0xd2
func            = 0x14
type            = 0x40
log_learn       = 1
publish_rssi    = 1

# Deuta AL-436-00-868 people counter
[042103FE]
address         = 0x042103FE
rorg            = 0xd1
func            = 0x07
type            = 0x10
log_learn       = 1
publish_rssi    = 1
